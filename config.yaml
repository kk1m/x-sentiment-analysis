# X Sentiment Analysis Configuration
# Central configuration file for all application settings

# =================================================================
# Sentiment Analysis Configuration
# =================================================================
sentiment:
  algorithm: "keyword"  # Options: keyword, openai, vader
  
  # OpenAI/OpenRouter Configuration
  openai:
    provider: "openrouter"
    api_base_url: "https://openrouter.ai/api/v1"
    model: "meta-llama/llama-3.1-8b-instruct"  # Cheapest option
    temperature: 0.3
    max_tokens: 200
    timeout_seconds: 30
    max_retries: 3
    max_api_calls_per_run: 10  # Ultra safe limit
    
    system_prompt: |
      You are a financial sentiment analyst specializing in cryptocurrency and stock markets.
      
      Analyze tweets about MicroStrategy (MSTR) and Bitcoin to determine investor sentiment.
      
      CLASSIFICATION RULES:
      - Bullish: Positive outlook, buying signals, optimism, price increase expectations, accumulation mentions
      - Bearish: Negative outlook, selling signals, pessimism, price decrease expectations, exit strategies
      - Neutral: Factual information, balanced views, questions, or unclear sentiment
      
      IMPORTANT CONSIDERATIONS:
      - Detect sarcasm and irony (often indicates opposite sentiment)
      - Consider emoji context (ðŸš€ðŸ“ˆ = bullish, ðŸ“‰ðŸ’€ = bearish)
      - Price targets and technical analysis indicate sentiment direction
      - "HODL", "diamond hands", "to the moon" = bullish
      - "Dump", "exit", "take profits" = bearish
      
      RESPONSE FORMAT (JSON only):
      {
        "sentiment": "Bullish|Bearish|Neutral",
        "confidence": 0.0-1.0,
        "reasoning": "brief 1-sentence explanation"
      }
  
  # Keyword Matching Configuration
  keyword:
    bullish_keywords:
      - "moon"
      - "bullish"
      - "buy"
      - "pump"
      - "rocket"
      - "ðŸš€"
      - "up"
      - "gain"
      - "accumulate"
      - "long"
      - "calls"
    bearish_keywords:
      - "dump"
      - "bearish"
      - "sell"
      - "crash"
      - "down"
      - "loss"
      - "exit"
      - "short"
      - "puts"
  
  # VADER Configuration
  vader:
    threshold_positive: 0.05
    threshold_negative: -0.05

# =================================================================
# Bot Detection Configuration
# =================================================================
bot_detection:
  algorithm: "heuristic"  # Options: heuristic, openai
  
  # Heuristic-based Detection
  heuristic:
    follower_threshold: 100
    following_ratio_threshold: 5.0
    account_age_threshold_days: 30
    min_tweets_threshold: 10
    default_profile_pic_penalty: 0.3
    no_bio_penalty: 0.2
  
  # OpenAI/OpenRouter-based Detection
  openai:
    provider: "openrouter"
    api_base_url: "https://openrouter.ai/api/v1"
    model: "meta-llama/llama-3.1-8b-instruct"
    temperature: 0.1
    max_tokens: 150
    timeout_seconds: 30
    max_retries: 3
    
    system_prompt: |
      You are a social media bot detection specialist.
      
      Analyze Twitter/X account characteristics to determine if an account is likely a bot.
      
      BOT INDICATORS (increase bot likelihood):
      - Generic usernames (random numbers/letters)
      - Very low or very high follower/following ratio
      - New account with high activity
      - Repetitive posting patterns
      - Generic or missing bio
      - Promotional/spam content
      - Excessive hashtags or mentions
      
      HUMAN INDICATORS (decrease bot likelihood):
      - Verified account
      - Established account (>1 year old)
      - Balanced follower/following ratio
      - Personal bio with specific interests
      - Varied content and engagement
      - Conversational replies
      
      RESPONSE FORMAT (JSON only):
      {
        "is_bot": true|false,
        "confidence": 0.0-1.0,
        "reasoning": "brief 1-sentence explanation"
      }

# =================================================================
# Data Collection Configuration
# =================================================================
collection:
  query: "MSTR"
  max_results: 10
  schedule:
    - "Monday"
    - "Wednesday"
    - "Friday"
    - "Sunday"
  time_window_hours: 72

# =================================================================
# Dashboard Configuration
# =================================================================
dashboard:
  fear_greed_scale:
    min: 0
    max: 100
  default_days: 90
  thresholds:
    extreme_fear: 25
    fear: 40
    neutral_low: 40
    neutral_high: 60
    greed: 75
    extreme_greed: 100

# =================================================================
# API Configuration
# =================================================================
api:
  rate_limit:
    requests_per_15min: 1
    requests_per_day: 100
  retry:
    max_attempts: 3
    backoff_seconds: 60
